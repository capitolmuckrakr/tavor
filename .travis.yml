language: go

go:
  - 1.4

install:
  # project
  - make dependencies
  - make install

  # checks
  - go get github.com/kisielk/errcheck
  - go get code.google.com/p/go.tools/cmd/vet
  - go get github.com/golang/lint
  - go install github.com/golang/lint/golint

  # code coverage
  - go get code.google.com/p/go.tools/cmd/cover
  - go get github.com/onsi/ginkgo/ginkgo
  - go get github.com/modocache/gover
  - if [ "$TRAVIS_SECURE_ENV_VARS" = "true" ]; then go get github.com/mattn/goveralls; fi

script:
  export PATH=$PATH:$GOROOT/bin:$GOPATH/bin

  # check if the project's code is ok
  - $(exit $(gofmt -l . | wc -l))
  - errcheck github.com/zimmski/tavor/...
  - $(exit $(go tool vet -all=true -v=true . 2>&1 | grep --invert-match -P "(Checking file|\%p of wrong type|can't check non-constant format)" | wc -l))
  - $(exit $(golint ./... | wc -l))

  # project
  - go test -v ./...

  # code coverage
  - ginkgo -r -cover -skipPackage="testdata"
  - gover
  - if [ "$TRAVIS_SECURE_ENV_VARS" = "true" ]; then goveralls -coverprofile=gover.coverprofile -service=travis-ci -repotoken $COVERALLS_TOKEN; fi

env:
  # coveralls.io
  secure: "CPuDl59GuLvd8BFbJwuy2mynpN4e9l2LAPF42yaf8b9HQIYQPrSeycqQAIDPQgKhk4x3/FbX1JrvieTP/P2hx+alxJv6tvEvh/aGg91h/dgLpUHiIvBQfa7viUKZrxkER3pQg30Ql2fMJOz8gKPWyB0mNvm5Eh4ysdjJmILTGuM="
